/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

var Request_pb = require('./Request_pb.js');
var Response_pb = require('./Response_pb.js');
var Global_pb = require('./Global_pb.js');
goog.exportSymbol('proto.proto.UserSessionGetActiveList', null, global);
goog.exportSymbol('proto.proto.UserSessionGetActiveListResponse', null, global);
goog.exportSymbol('proto.proto.UserSessionGetActiveListResponse.Session', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.UserSessionGetActiveList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.UserSessionGetActiveList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.proto.UserSessionGetActiveList.displayName = 'proto.proto.UserSessionGetActiveList';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.UserSessionGetActiveList.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.UserSessionGetActiveList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.UserSessionGetActiveList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.UserSessionGetActiveList.toObject = function(includeInstance, msg) {
  var f, obj = {
    request: (f = msg.getRequest()) && Request_pb.Request.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.UserSessionGetActiveList}
 */
proto.proto.UserSessionGetActiveList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.UserSessionGetActiveList;
  return proto.proto.UserSessionGetActiveList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.UserSessionGetActiveList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.UserSessionGetActiveList}
 */
proto.proto.UserSessionGetActiveList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new Request_pb.Request;
      reader.readMessage(value,Request_pb.Request.deserializeBinaryFromReader);
      msg.setRequest(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.UserSessionGetActiveList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.UserSessionGetActiveList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.UserSessionGetActiveList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.UserSessionGetActiveList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getRequest();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      Request_pb.Request.serializeBinaryToWriter
    );
  }
};


/**
 * optional Request request = 1;
 * @return {?proto.proto.Request}
 */
proto.proto.UserSessionGetActiveList.prototype.getRequest = function() {
  return /** @type{?proto.proto.Request} */ (
    jspb.Message.getWrapperField(this, Request_pb.Request, 1));
};


/** @param {?proto.proto.Request|undefined} value */
proto.proto.UserSessionGetActiveList.prototype.setRequest = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.proto.UserSessionGetActiveList.prototype.clearRequest = function() {
  this.setRequest(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.proto.UserSessionGetActiveList.prototype.hasRequest = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.UserSessionGetActiveListResponse = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.proto.UserSessionGetActiveListResponse.repeatedFields_, null);
};
goog.inherits(proto.proto.UserSessionGetActiveListResponse, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.proto.UserSessionGetActiveListResponse.displayName = 'proto.proto.UserSessionGetActiveListResponse';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.proto.UserSessionGetActiveListResponse.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.UserSessionGetActiveListResponse.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.UserSessionGetActiveListResponse.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.UserSessionGetActiveListResponse} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.UserSessionGetActiveListResponse.toObject = function(includeInstance, msg) {
  var f, obj = {
    response: (f = msg.getResponse()) && Response_pb.Response.toObject(includeInstance, f),
    sessionList: jspb.Message.toObjectList(msg.getSessionList(),
    proto.proto.UserSessionGetActiveListResponse.Session.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.UserSessionGetActiveListResponse}
 */
proto.proto.UserSessionGetActiveListResponse.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.UserSessionGetActiveListResponse;
  return proto.proto.UserSessionGetActiveListResponse.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.UserSessionGetActiveListResponse} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.UserSessionGetActiveListResponse}
 */
proto.proto.UserSessionGetActiveListResponse.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new Response_pb.Response;
      reader.readMessage(value,Response_pb.Response.deserializeBinaryFromReader);
      msg.setResponse(value);
      break;
    case 2:
      var value = new proto.proto.UserSessionGetActiveListResponse.Session;
      reader.readMessage(value,proto.proto.UserSessionGetActiveListResponse.Session.deserializeBinaryFromReader);
      msg.addSession(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.UserSessionGetActiveListResponse.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.UserSessionGetActiveListResponse.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.UserSessionGetActiveListResponse} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.UserSessionGetActiveListResponse.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getResponse();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      Response_pb.Response.serializeBinaryToWriter
    );
  }
  f = message.getSessionList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.proto.UserSessionGetActiveListResponse.Session.serializeBinaryToWriter
    );
  }
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.proto.UserSessionGetActiveListResponse.Session = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.proto.UserSessionGetActiveListResponse.Session, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.proto.UserSessionGetActiveListResponse.Session.displayName = 'proto.proto.UserSessionGetActiveListResponse.Session';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.proto.UserSessionGetActiveListResponse.Session.prototype.toObject = function(opt_includeInstance) {
  return proto.proto.UserSessionGetActiveListResponse.Session.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.proto.UserSessionGetActiveListResponse.Session} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.UserSessionGetActiveListResponse.Session.toObject = function(includeInstance, msg) {
  var f, obj = {
    sessionId: jspb.Message.getFieldWithDefault(msg, 1, 0),
    appName: jspb.Message.getFieldWithDefault(msg, 2, ""),
    appId: jspb.Message.getFieldWithDefault(msg, 3, 0),
    appBuildVersion: jspb.Message.getFieldWithDefault(msg, 4, 0),
    appVersion: jspb.Message.getFieldWithDefault(msg, 5, ""),
    platform: jspb.Message.getFieldWithDefault(msg, 6, 0),
    platformVersion: jspb.Message.getFieldWithDefault(msg, 7, ""),
    device: jspb.Message.getFieldWithDefault(msg, 8, 0),
    deviceName: jspb.Message.getFieldWithDefault(msg, 9, ""),
    language: jspb.Message.getFieldWithDefault(msg, 10, 0),
    country: jspb.Message.getFieldWithDefault(msg, 11, ""),
    current: jspb.Message.getFieldWithDefault(msg, 12, false),
    createTime: jspb.Message.getFieldWithDefault(msg, 13, 0),
    activeTime: jspb.Message.getFieldWithDefault(msg, 14, 0),
    ip: jspb.Message.getFieldWithDefault(msg, 15, "")
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.proto.UserSessionGetActiveListResponse.Session}
 */
proto.proto.UserSessionGetActiveListResponse.Session.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.proto.UserSessionGetActiveListResponse.Session;
  return proto.proto.UserSessionGetActiveListResponse.Session.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.proto.UserSessionGetActiveListResponse.Session} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.proto.UserSessionGetActiveListResponse.Session}
 */
proto.proto.UserSessionGetActiveListResponse.Session.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSessionId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAppId(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAppBuildVersion(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setAppVersion(value);
      break;
    case 6:
      var value = /** @type {!proto.proto.Platform} */ (reader.readEnum());
      msg.setPlatform(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setPlatformVersion(value);
      break;
    case 8:
      var value = /** @type {!proto.proto.Device} */ (reader.readEnum());
      msg.setDevice(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setDeviceName(value);
      break;
    case 10:
      var value = /** @type {!proto.proto.Language} */ (reader.readEnum());
      msg.setLanguage(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setCountry(value);
      break;
    case 12:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setCurrent(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCreateTime(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setActiveTime(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setIp(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.proto.UserSessionGetActiveListResponse.Session.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.proto.UserSessionGetActiveListResponse.Session.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.proto.UserSessionGetActiveListResponse.Session} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.proto.UserSessionGetActiveListResponse.Session.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSessionId();
  if (f !== 0) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getAppName();
  if (f.length > 0) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getAppId();
  if (f !== 0) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getAppBuildVersion();
  if (f !== 0) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getAppVersion();
  if (f.length > 0) {
    writer.writeString(
      5,
      f
    );
  }
  f = message.getPlatform();
  if (f !== 0.0) {
    writer.writeEnum(
      6,
      f
    );
  }
  f = message.getPlatformVersion();
  if (f.length > 0) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getDevice();
  if (f !== 0.0) {
    writer.writeEnum(
      8,
      f
    );
  }
  f = message.getDeviceName();
  if (f.length > 0) {
    writer.writeString(
      9,
      f
    );
  }
  f = message.getLanguage();
  if (f !== 0.0) {
    writer.writeEnum(
      10,
      f
    );
  }
  f = message.getCountry();
  if (f.length > 0) {
    writer.writeString(
      11,
      f
    );
  }
  f = message.getCurrent();
  if (f) {
    writer.writeBool(
      12,
      f
    );
  }
  f = message.getCreateTime();
  if (f !== 0) {
    writer.writeUint32(
      13,
      f
    );
  }
  f = message.getActiveTime();
  if (f !== 0) {
    writer.writeUint32(
      14,
      f
    );
  }
  f = message.getIp();
  if (f.length > 0) {
    writer.writeString(
      15,
      f
    );
  }
};


/**
 * optional uint64 session_id = 1;
 * @return {number}
 */
proto.proto.UserSessionGetActiveListResponse.Session.prototype.getSessionId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.proto.UserSessionGetActiveListResponse.Session.prototype.setSessionId = function(value) {
  jspb.Message.setField(this, 1, value);
};


/**
 * optional string app_name = 2;
 * @return {string}
 */
proto.proto.UserSessionGetActiveListResponse.Session.prototype.getAppName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.proto.UserSessionGetActiveListResponse.Session.prototype.setAppName = function(value) {
  jspb.Message.setField(this, 2, value);
};


/**
 * optional uint32 app_id = 3;
 * @return {number}
 */
proto.proto.UserSessionGetActiveListResponse.Session.prototype.getAppId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.proto.UserSessionGetActiveListResponse.Session.prototype.setAppId = function(value) {
  jspb.Message.setField(this, 3, value);
};


/**
 * optional uint32 app_build_version = 4;
 * @return {number}
 */
proto.proto.UserSessionGetActiveListResponse.Session.prototype.getAppBuildVersion = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.proto.UserSessionGetActiveListResponse.Session.prototype.setAppBuildVersion = function(value) {
  jspb.Message.setField(this, 4, value);
};


/**
 * optional string app_version = 5;
 * @return {string}
 */
proto.proto.UserSessionGetActiveListResponse.Session.prototype.getAppVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.proto.UserSessionGetActiveListResponse.Session.prototype.setAppVersion = function(value) {
  jspb.Message.setField(this, 5, value);
};


/**
 * optional Platform platform = 6;
 * @return {!proto.proto.Platform}
 */
proto.proto.UserSessionGetActiveListResponse.Session.prototype.getPlatform = function() {
  return /** @type {!proto.proto.Platform} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {!proto.proto.Platform} value */
proto.proto.UserSessionGetActiveListResponse.Session.prototype.setPlatform = function(value) {
  jspb.Message.setField(this, 6, value);
};


/**
 * optional string platform_version = 7;
 * @return {string}
 */
proto.proto.UserSessionGetActiveListResponse.Session.prototype.getPlatformVersion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.proto.UserSessionGetActiveListResponse.Session.prototype.setPlatformVersion = function(value) {
  jspb.Message.setField(this, 7, value);
};


/**
 * optional Device device = 8;
 * @return {!proto.proto.Device}
 */
proto.proto.UserSessionGetActiveListResponse.Session.prototype.getDevice = function() {
  return /** @type {!proto.proto.Device} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {!proto.proto.Device} value */
proto.proto.UserSessionGetActiveListResponse.Session.prototype.setDevice = function(value) {
  jspb.Message.setField(this, 8, value);
};


/**
 * optional string device_name = 9;
 * @return {string}
 */
proto.proto.UserSessionGetActiveListResponse.Session.prototype.getDeviceName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.proto.UserSessionGetActiveListResponse.Session.prototype.setDeviceName = function(value) {
  jspb.Message.setField(this, 9, value);
};


/**
 * optional Language language = 10;
 * @return {!proto.proto.Language}
 */
proto.proto.UserSessionGetActiveListResponse.Session.prototype.getLanguage = function() {
  return /** @type {!proto.proto.Language} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {!proto.proto.Language} value */
proto.proto.UserSessionGetActiveListResponse.Session.prototype.setLanguage = function(value) {
  jspb.Message.setField(this, 10, value);
};


/**
 * optional string country = 11;
 * @return {string}
 */
proto.proto.UserSessionGetActiveListResponse.Session.prototype.getCountry = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.proto.UserSessionGetActiveListResponse.Session.prototype.setCountry = function(value) {
  jspb.Message.setField(this, 11, value);
};


/**
 * optional bool current = 12;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.proto.UserSessionGetActiveListResponse.Session.prototype.getCurrent = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 12, false));
};


/** @param {boolean} value */
proto.proto.UserSessionGetActiveListResponse.Session.prototype.setCurrent = function(value) {
  jspb.Message.setField(this, 12, value);
};


/**
 * optional uint32 create_time = 13;
 * @return {number}
 */
proto.proto.UserSessionGetActiveListResponse.Session.prototype.getCreateTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.proto.UserSessionGetActiveListResponse.Session.prototype.setCreateTime = function(value) {
  jspb.Message.setField(this, 13, value);
};


/**
 * optional uint32 active_time = 14;
 * @return {number}
 */
proto.proto.UserSessionGetActiveListResponse.Session.prototype.getActiveTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.proto.UserSessionGetActiveListResponse.Session.prototype.setActiveTime = function(value) {
  jspb.Message.setField(this, 14, value);
};


/**
 * optional string ip = 15;
 * @return {string}
 */
proto.proto.UserSessionGetActiveListResponse.Session.prototype.getIp = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/** @param {string} value */
proto.proto.UserSessionGetActiveListResponse.Session.prototype.setIp = function(value) {
  jspb.Message.setField(this, 15, value);
};


/**
 * optional Response response = 1;
 * @return {?proto.proto.Response}
 */
proto.proto.UserSessionGetActiveListResponse.prototype.getResponse = function() {
  return /** @type{?proto.proto.Response} */ (
    jspb.Message.getWrapperField(this, Response_pb.Response, 1));
};


/** @param {?proto.proto.Response|undefined} value */
proto.proto.UserSessionGetActiveListResponse.prototype.setResponse = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.proto.UserSessionGetActiveListResponse.prototype.clearResponse = function() {
  this.setResponse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.proto.UserSessionGetActiveListResponse.prototype.hasResponse = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated Session session = 2;
 * @return {!Array.<!proto.proto.UserSessionGetActiveListResponse.Session>}
 */
proto.proto.UserSessionGetActiveListResponse.prototype.getSessionList = function() {
  return /** @type{!Array.<!proto.proto.UserSessionGetActiveListResponse.Session>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.proto.UserSessionGetActiveListResponse.Session, 2));
};


/** @param {!Array.<!proto.proto.UserSessionGetActiveListResponse.Session>} value */
proto.proto.UserSessionGetActiveListResponse.prototype.setSessionList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.proto.UserSessionGetActiveListResponse.Session=} opt_value
 * @param {number=} opt_index
 * @return {!proto.proto.UserSessionGetActiveListResponse.Session}
 */
proto.proto.UserSessionGetActiveListResponse.prototype.addSession = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.proto.UserSessionGetActiveListResponse.Session, opt_index);
};


proto.proto.UserSessionGetActiveListResponse.prototype.clearSessionList = function() {
  this.setSessionList([]);
};


goog.object.extend(exports, proto.proto);
